name: Wheels

on:
    workflow_dispatch:

jobs:
    build_sdist:
        name: Build SDist
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                submodules: recursive

            - name: Get external dependencies
              run: ./get_extern_deps.sh
              shell: bash

            - name: Build sdist
              run: |
                cd python_bindings
                pipx run build --sdist

            - name: Check metadata
              run: |
                cd python_bindings
                pipx run twine check dist/*

            - name: Upload Artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: dist-sdist
                  path: python_bindings/dist

    build_wheels:
        name: Wheels on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-12, macos-14]

        steps:
            - uses: actions/checkout@v4
              with:
                    submodules: recursive

            - name: Get external dependencies
              run: ./get_extern_deps.sh

            - uses: actions/setup-python@v5
              with:
                python-version: 3.8
              if: runner.os == 'macOS' && runner.arch == 'ARM64'

            - name: CI Build Wheel
              uses: pypa/cibuildwheel@v2.19
              with:
                    package-dir: python_bindings

            - name: Verify clean
              shell: bash
              run: |
                    cd python_bindings
                    git diff --exit-code

            - name: Upload Wheels
              uses: actions/upload-artifact@v3
              with:
                    name: dist-${{ matrix.os }}
                    path: ./wheelhouse/*.whl
    
    merge_wheels:

        name: Merge wheels
        runs-on: ubuntu-latest
        needs: [build_sdist, build_wheels]
        steps:
            - name: Merge Artifacts
              uses: actions/upload-artifact/merge@v4
              with:
                  name: dist

    
    upload_all:

        name: Upload if release
        needs: [merge_wheels]
        runs-on: ubuntu-latest
        if: github.event_name == 'release' && github.event.action == 'published'

        steps:

            - uses: actions/setup-python@v5

            - uses: actions/download-artifact@v4
              with:
                  path: dist

            - uses: pypa/gh-action-pypi-publish@release/v1
              with:
                  user: __token__
                  password: ${{ secrets.pypi_password }}

        
